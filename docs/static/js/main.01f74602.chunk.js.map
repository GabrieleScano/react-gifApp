{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAcP,GAAd,mBAA6BO,OAC3CN,EAAc,MAKhB,SACE,uBACGO,KAAK,OACLC,MAAOT,EACPU,SAlBmB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAafM,GAbe,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAAe,ECAd,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAInB,CAACpB,IAEIqB,EDfyBK,CAAc1B,GAAlCa,EAF0B,EAEhCN,KAAca,EAFkB,EAElBA,QAQpB,OACM,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,2CAEb,qBAAKJ,UAAU,YAAf,SACSH,EAAOJ,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEnBhBgB,EAAU,WAAO,IAAD,EACSzC,mBAAS,CAAC,eADnB,mBACpB0C,EADoB,KACR3C,EADQ,KAG3B,OACE,gCACE,0CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG2C,EAAWnB,KAAI,SAACT,GACf,OAAO,cAAC,EAAD,CAASA,SAAUA,GAAeA,QAI7C,2B,MCVN6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.01f74602.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 0) {\n      setCategories((categs) => [ inputValue, ...categs]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n         type=\"text\" \n         value={inputValue} \n         onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async( category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=pv3v8LJnapuQJPssKP5D8I8AtUyPmtrt`\n    const respuesta = await fetch(url)\n    const {data} = await respuesta.json()\n\n    const gifs = data.map((img)=> {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n    // console.log({id, title, url})\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","// import  React, { useState, useEffect } from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ( { category }) => {\n\n  const { data: images, loading } = useFetchGifs( category )\n\n    // useEffect(() => {\n    //     getGifs( category)\n    //     .then( img => setImages( img ))\n    //     //.then( setImages )\n    // },[category])\n\n    return (\n          <>\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\n\n            { loading && <p>Loading...</p> }\n      \n            <div className='card-grid'>\n                    {images.map((img)=> (\n                    <GifGridItem \n                    key={img.id}\n                    {...img}/>\n                    ))} \n            </div>\n          </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(()=> {\n        getGifs(category)\n        .then(imgs=> {\n            setState({\n                data: imgs,\n                loading: false\n            })\n        })\n\n    },[category])\n\n    return state\n}\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GiftApp = () => {\n  const [categories, setCategories] = useState([\"javascript\"]);\n\n  return (\n    <div>\n      <h2>Gift App</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ul>\n        {categories.map((category) => {\n          return <GifGrid category={category} key={category} />;\n        })}\n      </ul>\n\n      <hr />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftApp } from './GiftApp'\nimport './index.css';\n\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <GiftApp />,\n  document.getElementById('root')\n);\n\n// reportWebVitals();\n"],"sourceRoot":""}